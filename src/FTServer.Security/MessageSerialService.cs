using FTServer.Contracts.Security;

namespace FTServer.Security
{
    public class MessageSerialService : IMessageSerialService
    {
        private int _index;
        private int _key;

        public MessageSerialService()
        {
            _index = 0;
            _key = 0;
        }

        public ushort Compute(byte[] buffer, int offset)
        {
            int index = (((_key << 4) - _key * 4 + _index) * 2);
            ushort serial = (ushort)(SerialTable[index] | (SerialTable[index + 1] << 8));
            _index = (_index + 1) % 60;
            return serial;
        }

        private static readonly byte[] SerialTable =
        {
            0xF2, 0x30, 0x75, 0x86, 0xD4, 0x7D, 0x57, 0x38, 0x6E, 0x68,
            0x4F, 0x7E, 0x30, 0x58, 0xED, 0x7D, 0x5C, 0x47, 0xC3, 0x31,
            0xCA, 0x2B, 0x5F, 0x56, 0xC8, 0x7A, 0x65, 0x34, 0xF6, 0x62,
            0x31, 0x5B, 0x00, 0x38, 0x15, 0x5B, 0xD8, 0x2F, 0xA7, 0x57,
            0xB8, 0x79, 0x3D, 0x3C, 0x40, 0x6C, 0xFB, 0x89, 0xBE, 0x63,
            0x19, 0x5F, 0x36, 0x57, 0xC1, 0x81, 0xEC, 0x52, 0x15, 0x58,
            0x2A, 0x35, 0x3B, 0x7F, 0x6A, 0x7E, 0xF9, 0x40, 0x44, 0x7E,
            0xF7, 0x3F, 0xD8, 0x6E, 0xA5, 0x57, 0xA8, 0x2D, 0x43, 0x57,
            0xC2, 0x56, 0x4D, 0x63, 0xF4, 0xCB, 0xBD, 0x81, 0x4E, 0x7E,
            0xB5, 0x5E, 0x1A, 0x5F, 0xB1, 0x5A, 0x8A, 0x37, 0xB5, 0x53,
            0x14, 0xA5, 0xEB, 0x56, 0x5B, 0x60, 0xD1, 0x63, 0x70, 0x57,
            0xF5, 0x64, 0xC6, 0xAD, 0xD7, 0x57, 0xCC, 0x5E, 0x2D, 0x31,
            0x04, 0x7E, 0xEB, 0x56, 0xE7, 0x38, 0xE5, 0x63, 0xD4, 0x57,
            0x3D, 0x59, 0x96, 0x38, 0x77, 0x67, 0xC0, 0x60, 0x2D, 0x31,
            0x1A, 0xD1, 0xD9, 0x86, 0xDE, 0x7D, 0x07, 0x4C, 0xCE, 0x58,
            0x87, 0x7D, 0x08, 0x58, 0xD9, 0x7D, 0x04, 0x2C, 0xCF, 0x2F,
            0x16, 0x7B, 0xB7, 0x58, 0xFA, 0x7A, 0x45, 0x40, 0xEA, 0x64,
            0x73, 0x82, 0x46, 0x5B, 0x79, 0x5B, 0xC0, 0x7E, 0xC5, 0x57,
            0x58, 0x89, 0x69, 0x3D, 0x86, 0x6C, 0xB5, 0x89, 0x2E, 0x62,
            0xE9, 0x66, 0x66, 0x59, 0xDF, 0x81, 0xB4, 0x53, 0xCD, 0x63,
            0xDC, 0x7D, 0x8B, 0x57, 0x84, 0x91, 0xE9, 0x5A, 0x60, 0x30,
            0xB1, 0x67, 0x0A, 0x38, 0x81, 0x62, 0x72, 0x3B, 0x55, 0x63,
            0x62, 0x34, 0x31, 0x7F, 0x38, 0x7E, 0x59, 0x31, 0xCC, 0x91,
            0xBF, 0x40, 0xE2, 0x6E, 0xD7, 0x57, 0xE0, 0x2C, 0x2B, 0x5B,
            0x04, 0x7E, 0xBD, 0x57, 0x84, 0x91, 0x79, 0x5C, 0x8C, 0x31,
            0xC5, 0x67, 0x1E, 0x38, 0xB3, 0x62, 0x02, 0x3D, 0x3D, 0x67,
            0x62, 0x34, 0x31, 0x7F, 0x38, 0x7E, 0x77, 0x31, 0xCC, 0x91,
            0x23, 0x41, 0x0E, 0x70, 0x9F, 0x58, 0xA8, 0x2D, 0x49, 0x5B,
            0x2E, 0xD1, 0x21, 0x85, 0x9E, 0x77, 0xD7, 0x3A, 0xB0, 0x58,
            0xB7, 0x75, 0x08, 0x58, 0xD9, 0x7D, 0x04, 0x2C, 0xCF, 0x2F,
            0x94, 0x7F, 0x7B, 0x58, 0xE7, 0x38, 0xDB, 0x63, 0xC0, 0x57,
            0x75, 0x58, 0x66, 0x40, 0x3F, 0x68, 0x5C, 0x60, 0xCD, 0x40,
            0x5E, 0x89, 0x6E, 0x3D, 0x72, 0x6C, 0xBF, 0x89, 0x22, 0x64,
            0xE9, 0x66, 0x06, 0x69, 0x97, 0x8D, 0x7C, 0x54, 0x31, 0x64,
            0x02, 0x2B, 0x6B, 0x68, 0xC2, 0x7B, 0xEF, 0x40, 0x36, 0x64,
            0x4B, 0x87, 0x68, 0x5C, 0x77, 0x67, 0x64, 0x8F, 0xCD, 0x4F,
            0x8E, 0x35, 0xF9, 0x7F, 0x74, 0x7E, 0x81, 0x31, 0xFE, 0x91,
            0x87, 0x41, 0x72, 0x70, 0x03, 0x59, 0xD6, 0x2C, 0x53, 0x5B,
            0xF6, 0xD1, 0xDD, 0x87, 0xD0, 0x77, 0xE1, 0x3A, 0xF6, 0x58,
            0xDF, 0x75, 0xD0, 0x58, 0x15, 0x7E, 0xD2, 0x2B, 0xF7, 0x2F,
            0x5E, 0x79, 0xFB, 0x50, 0x26, 0x7C, 0x59, 0x40, 0x56, 0x62,
            0xAF, 0x87, 0xCC, 0x5C, 0xB5, 0x5B, 0xC3, 0x7F, 0xF9, 0x50,
            0x00, 0x3C, 0xDD, 0x2D, 0xFA, 0x34, 0x91, 0x5D, 0xC4, 0x30,
            0xE1, 0x5F, 0x6E, 0x38, 0x49, 0x63, 0xBA, 0x2F, 0x85, 0xD8,
            0x1E, 0x7A, 0xED, 0x56, 0xB5, 0x38, 0xB3, 0x63, 0xCA, 0x57,
            0x49, 0x57, 0x32, 0x38, 0xE3, 0x5A, 0x90, 0x54, 0x15, 0x67,
            0x62, 0x89, 0x9B, 0x3D, 0x7C, 0x6C, 0x8D, 0x89, 0x8E, 0x52,
            0x21, 0x66, 0xD6, 0x57, 0xDF, 0x81, 0xB4, 0x53, 0x2D, 0x54,
            0x62, 0x34, 0x1B, 0x30, 0x38, 0x7E, 0x45, 0x31, 0xCC, 0x91,
            0x83, 0x40, 0x8A, 0x53, 0xAB, 0x56, 0x9A, 0x2C, 0x17, 0x5B,
            0x12, 0x52, 0xFB, 0x50, 0xCE, 0x79, 0x27, 0x40, 0x42, 0x62,
            0x1F, 0x86, 0x10, 0x5A, 0xBF, 0x5B, 0xDC, 0x7B, 0xCD, 0x4F,
            0xDC, 0x7D, 0x8B, 0x57, 0x84, 0x91, 0xB9, 0x62, 0x28, 0x31,
            0x15, 0x68, 0x39, 0x30, 0xB1, 0x5A, 0x39, 0x30, 0x75, 0x34,
            0x2E, 0xD1, 0xEF, 0x84, 0x9E, 0x77, 0xD7, 0x3A, 0x20, 0x57,
            0xB7, 0x75, 0x78, 0x56, 0xD9, 0x7D, 0x04, 0x2C, 0x6B, 0x2F,
            0xE4, 0x2F, 0x49, 0x57, 0xF7, 0x5F, 0x2D, 0x58, 0x5C, 0x6B,
            0x25, 0x5D, 0x96, 0x38, 0x67, 0x40, 0x8E, 0x60, 0x19, 0x31,
            0x1B, 0x30, 0xC9, 0x2D, 0x76, 0x45, 0x15, 0x7A, 0x2E, 0x62,
            0x61, 0x53, 0xAA, 0x56, 0x9B, 0x84, 0x3C, 0x67, 0xCD, 0x63,
            0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        };
    }
}
