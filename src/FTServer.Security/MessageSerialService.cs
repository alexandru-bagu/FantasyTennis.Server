using FTServer.Contracts.Security;

namespace FTServer.Security
{
    public class MessageSerialService : IMessageSerialService
    {
        private const int _rollOver = 60;
        private int _sendIndex, _recvIndex;
        private int _key;

        public MessageSerialService()
        {
            _sendIndex = 0;
            _recvIndex = 0;
            _key = 0;
        }

        public ushort ComputeSend(byte[] buffer, int offset)
        {
            var idx = _key;
            if (idx != -1)
            {
                var currentIdx = _sendIndex;
                idx = currentIdx + idx * _rollOver;
                var result = SERIAL_TABLE[idx];
                idx = currentIdx + 1;
                _recvIndex = idx;
                if (idx > _rollOver) _sendIndex = 0;
                return result;
            }
            else
            {
                return 0;
            }
        }

        public bool ValidateReceive(ushort serial)
        {
            var idx = _key;
            if (idx != -1)
            {
                var currentIdx = _recvIndex;
                idx = currentIdx + idx * _rollOver;
                if (serial == SERIAL_TABLE[idx])
                {
                    idx = currentIdx + 1;
                    _recvIndex = idx;
                    if (idx > _rollOver) _recvIndex = 0;
                }
            }

            return true;
        }

        private static readonly ushort[] SERIAL_TABLE =
        {
            0x30F2,  0x8675,  0x7DD4,  0x3857,
            0x686E,  0x7E4F,  0x5830,  0x7DED,
            0x475C,  0x31C3,  0x2BCA,  0x565F,
            0x7AC8,  0x3465,  0x62F6,  0x5B31,
            0x3800,  0x5B15,  0x2FD8,  0x57A7,
            0x79B8,  0x3C3D,  0x6C40,  0x89FB,
            0x63BE,  0x5F19,  0x5736,  0x81C1,
            0x52EC,  0x5815,  0x352A,  0x7F3B,
            0x7E6A,  0x40F9,  0x7E44,  0x3FF7,
            0x6ED8,  0x57A5,  0x2DA8,  0x5743,
            0x56C2,  0x634D,  0xCBF4,  0x81BD,
            0x7E4E,  0x5EB5,  0x5F1A,  0x5AB1,
            0x378A,  0x53B5,  0xA514,  0x56EB,
            0x605B,  0x63D1,  0x5770,  0x64F5,
            0xADC6,  0x57D7,  0x5ECC,  0x312D,
            0x7E04,  0x56EB,  0x38E7,  0x63E5,
            0x57D4,  0x593D,  0x3896,  0x6777,
            0x60C0,  0x312D,  0xD11A,  0x86D9,
            0x7DDE,  0x4C07,  0x58CE,  0x7D87,
            0x5808,  0x7DD9,  0x2C04,  0x2FCF,
            0x7B16,  0x58B7,  0x7AFA,  0x4045,
            0x64EA,  0x8273,  0x5B46,  0x5B79,
            0x7EC0,  0x57C5,  0x8958,  0x3D69,
            0x6C86,  0x89B5,  0x622E,  0x66E9,
            0x5966,  0x81DF,  0x53B4,  0x63CD,
            0x7DDC,  0x578B,  0x9184,  0x5AE9,
            0x3060,  0x67B1,  0x380A,  0x6281,
            0x3B72,  0x6355,  0x3462,  0x7F31,
            0x7E38,  0x3159,  0x91CC,  0x40BF,
            0x6EE2,  0x57D7,  0x2CE0,  0x5B2B,
            0x7E04,  0x57BD,  0x9184,  0x5C79,
            0x318C,  0x67C5,  0x381E,  0x62B3,
            0x3D02,  0x673D,  0x3462,  0x7F31,
            0x7E38,  0x3177,  0x91CC,  0x4123,
            0x700E,  0x589F,  0x2DA8,  0x5B49,
            0xD12E,  0x8521,  0x779E,  0x3AD7,
            0x58B0,  0x75B7,  0x5808,  0x7DD9,
            0x2C04,  0x2FCF,  0x7F94,  0x587B,
            0x38E7,  0x63DB,  0x57C0,  0x5875,
            0x4066,  0x683F,  0x605C,  0x40CD,
            0x895E,  0x3D6E,  0x6C72,  0x89BF,
            0x6422,  0x66E9,  0x6906,  0x8D97,
            0x547C,  0x6431,  0x2B02,  0x686B,
            0x7BC2,  0x40EF,  0x6436,  0x874B,
            0x5C68,  0x6777,  0x8F64,  0x4FCD,
            0x358E,  0x7FF9,  0x7E74,  0x3181,
            0x91FE,  0x4187,  0x7072,  0x5903,
            0x2CD6,  0x5B53,  0xD1F6,  0x87DD,
            0x77D0,  0x3AE1,  0x58F6,  0x75DF,
            0x58D0,  0x7E15,  0x2BD2,  0x2FF7,
            0x795E,  0x50FB,  0x7C26,  0x4059,
            0x6256,  0x87AF,  0x5CCC,  0x5BB5,
            0x7FC3,  0x50F9,  0x3C00,  0x2DDD,
            0x34FA,  0x5D91,  0x30C4,  0x5FE1,
            0x386E,  0x6349,  0x2FBA,  0xD885,
            0x7A1E,  0x56ED,  0x38B5,  0x63B3,
            0x57CA,  0x5749,  0x3832,  0x5AE3,
            0x5490,  0x6715,  0x8962,  0x3D9B,
            0x6C7C,  0x898D,  0x528E,  0x6621,
            0x57D6,  0x81DF,  0x53B4,  0x542D,
            0x3462,  0x301B,  0x7E38,  0x3145,
            0x91CC,  0x4083,  0x538A,  0x56AB,
            0x2C9A,  0x5B17,  0x5212,  0x50FB,
            0x79CE,  0x4027,  0x6242,  0x861F,
            0x5A10,  0x5BBF,  0x7BDC,  0x4FCD,
            0x7DDC,  0x578B,  0x9184,  0x62B9,
            0x3128,  0x6815,  0x3039,  0x5AB1,
            0x3039,  0x3475,  0xD12E,  0x84EF,
            0x779E,  0x3AD7,  0x5720,  0x75B7,
            0x5678,  0x7DD9,  0x2C04,  0x2F6B,
            0x2FE4,  0x5749,  0x5FF7,  0x582D,
            0x6B5C,  0x5D25,  0x3896,  0x4067,
            0x608E,  0x3119,  0x301B,  0x2DC9,
            0x4576,  0x7A15,  0x622E,  0x5361,
            0x56AA,  0x849B,  0x673C,  0x63CD,
            0x1,  0x0,  0x0
        };
    }
}
